{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "# TUGAS\n",
        "## Pengenalan Array dengan Numpy"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "Kelompok 1\n",
        "\n",
        "1. Andy Kanjaya\n",
        "2. Furqon Ali Abdillah\n",
        "3. Maura Lutvia\n",
        "4. Selvi\n",
        "5. Syifariani Kamil\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 27,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "teOSNgkisDxD",
        "outputId": "4645e54d-1f93-40bd-ed05-c6b1e2afa429",
        "scrolled": true
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "[[1 2 3]\n",
            " [5 6 7]]\n",
            "(2, 3)\n",
            "int64\n"
          ]
        }
      ],
      "source": [
        "# import libraries\n",
        "import numpy as np\n",
        "# buat matriks (arr) shape 2x3 dengan tipe data integer 64\n",
        "# [[ 1  2  3 ]\n",
        "#  [ 5  6  7 ]]\n",
        "arr = np.array([[1,2,3],[5,6,7]], dtype=np.int64)\n",
        "# print arr\n",
        "print(arr)\n",
        "# print shape arr\n",
        "print(arr.shape)\n",
        "# print tipe data arr\n",
        "print(arr.dtype)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 28,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "XQu2qotARqrU",
        "outputId": "e30cfcf9-e627-48ea-cb66-95b3b10cbea3"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "[[33 89 74]\n",
            " [13 62 36]]\n",
            "(2, 3)\n",
            "int64\n"
          ]
        }
      ],
      "source": [
        "# buat matriks (arr_rdm) shape 2x3 dengan tipe data integer 64\n",
        "# nilai elemennya random\n",
        "import numpy as np\n",
        "arr_rdm = np.random.randint(100, size=(2, 3),dtype=np.int64)\n",
        "# print arr_rdm\n",
        "print(arr_rdm)\n",
        "# print shape arr_rdm\n",
        "print(arr_rdm.shape)\n",
        "# print tipe data arr_rdm\n",
        "print(arr_rdm.dtype)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "ibSu8dw4TCE9"
      },
      "source": [
        "# Aritmatika Dasar dengan Numpy"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 29,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "2gFgxZ6BSlr-",
        "outputId": "b014186a-1071-48b4-f718-1c84c7cb9ae6"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "[[34 91 77]\n",
            " [18 68 43]]\n",
            "[[-32 -87 -71]\n",
            " [ -8 -56 -29]]\n"
          ]
        }
      ],
      "source": [
        "# operasi penjumlahan arr dan arr_rdm\n",
        "newarr = np.add(arr, arr_rdm)\n",
        "print(newarr)\n",
        "# operasi pengurangan arr dan arr_rdm\n",
        "newkurang = np.subtract(arr, arr_rdm)\n",
        "print(newkurang)\n",
        "# operasi perpangkatan dua arr_rdm\n",
        "\n",
        "# operasi perkalian elemen-wise arr dan arr_rdm\n",
        "\n",
        "# Transpose matriks arr_rdm\n",
        "# operasi perkalian matriks arr dan arr_rdm"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 30,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "QK1uxmhmT7tj",
        "outputId": "325cc526-9719-49ed-db29-4ee75833db5e"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "4.0\n",
            "[2. 6.]\n",
            "24\n",
            "[5 6 7]\n"
          ]
        }
      ],
      "source": [
        "# print nilai rata-rata arr\n",
        "mean_all = np.mean(arr)\n",
        "print(mean_all)\n",
        "# print nilai rata-rata per baris arr\n",
        "mean_pear_row = np.mean (arr, axis = 1)\n",
        "print (mean_pear_row)\n",
        "\n",
        "# print total nilai seluruh elemen matriks arr\n",
        "total_sum = np.sum(arr)\n",
        "print(total_sum)\n",
        "# print nilai maximal per kolom matriks arr\n",
        "maxper_colum = np.max(arr, axis=0)\n",
        "print(maxper_colum)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "kHgUabu9V2AJ"
      },
      "source": [
        "# Fitur pada Numpy"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 31,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "HxVt2zc1UdJD",
        "outputId": "3e53d002-0753-417b-b48d-d1a12799ecd4"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]\n",
            "6\n",
            "[18, 19, 20]\n",
            "[4, 5, 6, 7]\n"
          ]
        }
      ],
      "source": [
        "# buat array arrg dengan nilai range 1-20\n",
        "arrg = list(range(1,21))\n",
        "# print arrg\n",
        "print(arrg)\n",
        "# print nilai arrg index 5\n",
        "index = 5\n",
        "print(arrg[index])\n",
        "# print nilai arrg untuk 3 elemen dari terakhir\n",
        "print(arrg[-3:])\n",
        "# print nilai arrg 3 sampai 6\n",
        "print(arrg[3:7])"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 32,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "2mIKvlUyVR00",
        "outputId": "4afdf703-342d-4e9c-92b1-d7c6cb321807"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "Matriks arr:\n",
            "[[1 2 3]\n",
            " [5 6 7]]\n",
            "\n",
            "Slice matriks arr dengan output:\n",
            "[[2 3]\n",
            " [6 7]]\n",
            "\n",
            "Slice matriks arr dengan output:\n",
            "[[3]\n",
            " [7]]\n"
          ]
        }
      ],
      "source": [
        "# print matriks arr\n",
        "print(\"Matriks arr:\")\n",
        "print(arr)\n",
        "# print slice matriks arr dengan output\n",
        "slice1 = arr[0:2, 1:3]\n",
        "print(\"\\nSlice matriks arr dengan output:\")\n",
        "print(slice1)\n",
        "## [[ 2  3 ]\n",
        "##  [ 6  7 ]]\n",
        "\n",
        "\n",
        "# print slice matriks arr dengan output\n",
        "## [[ 3 ]\n",
        "##  [ 7 ]]\n",
        "slice2 = arr[0:2, 2:3]\n",
        "print(\"\\nSlice matriks arr dengan output:\")\n",
        "print(slice2)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 33,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "tlJfHEnRV57y",
        "outputId": "befac129-9235-456d-b386-272fbee2d920"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "(3, 4)\n"
          ]
        }
      ],
      "source": [
        "# buat matriks mtx_rdm ukuran 3x4 dengan tipe data integer, isi elemennya random\n",
        "mtx_rdm = np.random.randint(1, 10, size=(3, 4))\n",
        "# print mtx_rdm shape\n",
        "print(mtx_rdm.shape)\n",
        "# ubah shape mtx_rdm menjadi satu dimensi\n",
        "mtx_rdm_flat = mtx_rdm.flatten()\n",
        "# ubah shape mtx_rdm menjadi 6x2\n",
        "mtx_rdm_reshaped = mtx_rdm.reshape(6, 2)"
      ]
    }
  ],
  "metadata": {
    "anaconda-cloud": {},
    "colab": {
      "provenance": []
    },
    "kernelspec": {
      "display_name": "Python [Root]",
      "language": "python",
      "name": "Python [Root]"
    },
    "language_info": {
      "codemirror_mode": {
        "name": "ipython",
        "version": 3
      },
      "file_extension": ".py",
      "mimetype": "text/x-python",
      "name": "python",
      "nbconvert_exporter": "python",
      "pygments_lexer": "ipython3",
      "version": "3.5.2"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 0
}
